name: Run testflows tests
run-name: ${{ github.actor }} is running Altinity Grafana Plugin testflows tests

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - "*"

env:
  testflows_logs: |
    ./testflows_logs/*
  code_coverage: |
    ./code_coverage/*
  selenium_logs: |
    ./selenium_logs/*

jobs:
  tests:
    runs-on: [ self-hosted, on-demand, type-cpx41, image-x86-system-ubuntu-22.04 ]
    env:
      GRAFANA_ACCESS_POLICY_TOKEN: ${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN }}

    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Setup
        run: tests/testflows/infra/setup.sh

      - name: Run Altinity Grafana Plugin tests
        run: cd ./tests/testflows/ &&
          python3
          -u ./regression.py --before=0.1 --after=0.1
          --log raw.log
          -o classic

      - name: Create code coverage for backend
        run: docker compose run --rm backend_coverage_generate

      - name: Create code coverage for frontend
        run: docker compose run --rm frontend_coverage_generate

      - name: Create reports
        if: always()
        run: tests/testflows/infra/create-report.sh

      - name: Report golang coverage
        uses: coverallsapp/github-action@v2
        with:
          file: go_coverage/coverage.html
          parallel: true
          format: golang

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: testflows-logs
          path: ${{ env.testflows_logs}}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-coverage
          path: ${{ env.code_coverage}}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: selenium-logs
          path: ${{ env.selenium_logs}}
