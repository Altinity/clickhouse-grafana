// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: google/apps/drive/labels/v2beta/exception_detail.proto

package labels

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Every ExceptionType maps to one and only one Exception class. This allows
// internal clients to identify the exact server exception that caused the
// error for debugging and logging purposes.
// Add new ExceptionTypes to EXCEPTION_TYPE_TO_ERROR_CODE_MAP in
// j/c/g/apps/boq/metadata/model/service/exceptions/CategoryExceptionHelper
type ExceptionType int32

const (
	// Unknown ExceptionType.
	ExceptionType_EXCEPTION_TYPE_UNSPECIFIED ExceptionType = 0
	// The required field is missing.
	ExceptionType_FIELD_REQUIRED ExceptionType = 1
	// Unable to create a metamodel with the given ID because it already exists.
	ExceptionType_METAMODEL_ALREADY_EXISTS ExceptionType = 2
	// Metamodel was not found
	ExceptionType_METAMODEL_NOT_FOUND ExceptionType = 3
	// Metamodel state transition isn't allowed.
	ExceptionType_ILLEGAL_METAMODEL_STATE_TRANSITION ExceptionType = 4
	// Metamodel deprecation policy is invalid.
	ExceptionType_INVALID_METAMODEL_DEPRECATION_POLICY ExceptionType = 5
	// Cannot delete a metamodel due to the pending deprecation policy.
	ExceptionType_METAMODEL_DELETION_DENIED_UNTIL ExceptionType = 6
	// A Field value is invalid.
	ExceptionType_INVALID_FIELD ExceptionType = 7
	// Precondition failed when updating a metamodel
	ExceptionType_METAMODEL_PRECONDITION_FAILED ExceptionType = 8
	// Multiple fields had the same key.
	ExceptionType_DUPLICATE_FIELD_KEY ExceptionType = 9
	// Removing a field from a Metamodel (e.g. a published Metamodel) is not
	// permitted.
	ExceptionType_ILLEGAL_FIELD_REMOVAL ExceptionType = 10
	// Cannot specify field options for a different field type.
	ExceptionType_ILLEGAL_FIELD_OPTIONS_FOR_FIELD ExceptionType = 11
	// Some changes are not supported
	ExceptionType_UNSUPPORTED_CHANGE_TO_PUBLISHED_METAMODEL ExceptionType = 12
	// Cannot change the metamodel state in an update
	ExceptionType_ILLEGAL_METAMODEL_STATE_TRANSITION_IN_UPDATE ExceptionType = 13
	// The page token is expired
	ExceptionType_PAGE_TOKEN_EXPIRED ExceptionType = 14
	// The user is not authorized to make the request.
	ExceptionType_NOT_AUTHORIZED ExceptionType = 15
	// Illegal field state transition
	ExceptionType_ILLEGAL_FIELD_STATE_TRANSITION ExceptionType = 16
	// Illegal choice set option state transition
	ExceptionType_ILLEGAL_CHOICE_SET_OPTION_STATE_TRANSITION ExceptionType = 17
	// Invalid choice set options
	ExceptionType_INVALID_CHOICE_SET_OPTIONS ExceptionType = 18
	// Invalid field key
	ExceptionType_INVALID_FIELD_KEY ExceptionType = 19
	// A specified property on a field is outside the allowed range.
	ExceptionType_INVALID_FIELD_PROPERTY_RANGE ExceptionType = 20
	// A localized string wasn't valid. This may be because the locale is invalid,
	// its missing a default value, or the translation is empty for a set locale.
	ExceptionType_INVALID_LOCALIZED_STRING ExceptionType = 21
	// cannot change a property on a published field
	ExceptionType_ILLEGAL_CHANGE_TO_PUBLISHED_FIELD ExceptionType = 22
	// A field update is not inclusive of the previous value
	ExceptionType_INVALID_FIELD_UPDATE_NOT_INCLUSIVE ExceptionType = 23
	// A field update is not inclusive of the previous value
	ExceptionType_INVALID_CHOICE_SET_STATE ExceptionType = 24
	// An unknown error occurred
	ExceptionType_INTERNAL_SERVER_ERROR ExceptionType = 500
)

// Enum value maps for ExceptionType.
var (
	ExceptionType_name = map[int32]string{
		0:   "EXCEPTION_TYPE_UNSPECIFIED",
		1:   "FIELD_REQUIRED",
		2:   "METAMODEL_ALREADY_EXISTS",
		3:   "METAMODEL_NOT_FOUND",
		4:   "ILLEGAL_METAMODEL_STATE_TRANSITION",
		5:   "INVALID_METAMODEL_DEPRECATION_POLICY",
		6:   "METAMODEL_DELETION_DENIED_UNTIL",
		7:   "INVALID_FIELD",
		8:   "METAMODEL_PRECONDITION_FAILED",
		9:   "DUPLICATE_FIELD_KEY",
		10:  "ILLEGAL_FIELD_REMOVAL",
		11:  "ILLEGAL_FIELD_OPTIONS_FOR_FIELD",
		12:  "UNSUPPORTED_CHANGE_TO_PUBLISHED_METAMODEL",
		13:  "ILLEGAL_METAMODEL_STATE_TRANSITION_IN_UPDATE",
		14:  "PAGE_TOKEN_EXPIRED",
		15:  "NOT_AUTHORIZED",
		16:  "ILLEGAL_FIELD_STATE_TRANSITION",
		17:  "ILLEGAL_CHOICE_SET_OPTION_STATE_TRANSITION",
		18:  "INVALID_CHOICE_SET_OPTIONS",
		19:  "INVALID_FIELD_KEY",
		20:  "INVALID_FIELD_PROPERTY_RANGE",
		21:  "INVALID_LOCALIZED_STRING",
		22:  "ILLEGAL_CHANGE_TO_PUBLISHED_FIELD",
		23:  "INVALID_FIELD_UPDATE_NOT_INCLUSIVE",
		24:  "INVALID_CHOICE_SET_STATE",
		500: "INTERNAL_SERVER_ERROR",
	}
	ExceptionType_value = map[string]int32{
		"EXCEPTION_TYPE_UNSPECIFIED":                   0,
		"FIELD_REQUIRED":                               1,
		"METAMODEL_ALREADY_EXISTS":                     2,
		"METAMODEL_NOT_FOUND":                          3,
		"ILLEGAL_METAMODEL_STATE_TRANSITION":           4,
		"INVALID_METAMODEL_DEPRECATION_POLICY":         5,
		"METAMODEL_DELETION_DENIED_UNTIL":              6,
		"INVALID_FIELD":                                7,
		"METAMODEL_PRECONDITION_FAILED":                8,
		"DUPLICATE_FIELD_KEY":                          9,
		"ILLEGAL_FIELD_REMOVAL":                        10,
		"ILLEGAL_FIELD_OPTIONS_FOR_FIELD":              11,
		"UNSUPPORTED_CHANGE_TO_PUBLISHED_METAMODEL":    12,
		"ILLEGAL_METAMODEL_STATE_TRANSITION_IN_UPDATE": 13,
		"PAGE_TOKEN_EXPIRED":                           14,
		"NOT_AUTHORIZED":                               15,
		"ILLEGAL_FIELD_STATE_TRANSITION":               16,
		"ILLEGAL_CHOICE_SET_OPTION_STATE_TRANSITION":   17,
		"INVALID_CHOICE_SET_OPTIONS":                   18,
		"INVALID_FIELD_KEY":                            19,
		"INVALID_FIELD_PROPERTY_RANGE":                 20,
		"INVALID_LOCALIZED_STRING":                     21,
		"ILLEGAL_CHANGE_TO_PUBLISHED_FIELD":            22,
		"INVALID_FIELD_UPDATE_NOT_INCLUSIVE":           23,
		"INVALID_CHOICE_SET_STATE":                     24,
		"INTERNAL_SERVER_ERROR":                        500,
	}
)

func (x ExceptionType) Enum() *ExceptionType {
	p := new(ExceptionType)
	*p = x
	return p
}

func (x ExceptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExceptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_apps_drive_labels_v2beta_exception_detail_proto_enumTypes[0].Descriptor()
}

func (ExceptionType) Type() protoreflect.EnumType {
	return &file_google_apps_drive_labels_v2beta_exception_detail_proto_enumTypes[0]
}

func (x ExceptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExceptionType.Descriptor instead.
func (ExceptionType) EnumDescriptor() ([]byte, []int) {
	return file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescGZIP(), []int{0}
}

// Normalized internal-only message that identifies the exact exception that
// caused the error on the server.
type ExceptionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of exception that occurred.
	// required
	ErrorType ExceptionType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=google.apps.drive.labels.v2beta.ExceptionType" json:"error_type,omitempty"`
}

func (x *ExceptionDetail) Reset() {
	*x = ExceptionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_drive_labels_v2beta_exception_detail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionDetail) ProtoMessage() {}

func (x *ExceptionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_drive_labels_v2beta_exception_detail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionDetail.ProtoReflect.Descriptor instead.
func (*ExceptionDetail) Descriptor() ([]byte, []int) {
	return file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescGZIP(), []int{0}
}

func (x *ExceptionDetail) GetErrorType() ExceptionType {
	if x != nil {
		return x.ErrorType
	}
	return ExceptionType_EXCEPTION_TYPE_UNSPECIFIED
}

var File_google_apps_drive_labels_v2beta_exception_detail_proto protoreflect.FileDescriptor

var file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDesc = []byte{
	0x0a, 0x36, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74,
	0x61, 0x2f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x22, 0x60, 0x0a, 0x0f, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x2a, 0xe1, 0x06, 0x0a, 0x0d,
	0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x1a, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x45, 0x54, 0x41, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x41,
	0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x4d, 0x45, 0x54, 0x41, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x49, 0x4c, 0x4c, 0x45,
	0x47, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04,
	0x12, 0x28, 0x0a, 0x24, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x45, 0x54, 0x41,
	0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x05, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45,
	0x54, 0x41, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x54, 0x49, 0x4c, 0x10, 0x06, 0x12,
	0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x10, 0x07, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x45, 0x54, 0x41, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f,
	0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x09, 0x12, 0x19,
	0x0a, 0x15, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x52, 0x45, 0x4d, 0x4f, 0x56, 0x41, 0x4c, 0x10, 0x0a, 0x12, 0x23, 0x0a, 0x1f, 0x49, 0x4c, 0x4c,
	0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x0b, 0x12, 0x2d,
	0x0a, 0x29, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45,
	0x44, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x0c, 0x12, 0x30, 0x0a,
	0x2c, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x4d, 0x4f, 0x44,
	0x45, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0d, 0x12,
	0x16, 0x0a, 0x12, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x58,
	0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x22, 0x0a, 0x1e, 0x49,
	0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x10, 0x12,
	0x2e, 0x0a, 0x2a, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x43, 0x48, 0x4f, 0x49, 0x43,
	0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x11, 0x12,
	0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x48, 0x4f, 0x49, 0x43,
	0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x12, 0x12,
	0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x4b, 0x45, 0x59, 0x10, 0x13, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59,
	0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x14, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x53, 0x54,
	0x52, 0x49, 0x4e, 0x47, 0x10, 0x15, 0x12, 0x25, 0x0a, 0x21, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41,
	0x4c, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x16, 0x12, 0x26, 0x0a,
	0x22, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x53,
	0x49, 0x56, 0x45, 0x10, 0x17, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x43, 0x48, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x10, 0x18, 0x12, 0x1a, 0x0a, 0x15, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xf4, 0x03, 0x42,
	0x84, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x42, 0x14, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x45, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x3b,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescOnce sync.Once
	file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescData = file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDesc
)

func file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescGZIP() []byte {
	file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescOnce.Do(func() {
		file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescData)
	})
	return file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDescData
}

var file_google_apps_drive_labels_v2beta_exception_detail_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_apps_drive_labels_v2beta_exception_detail_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_apps_drive_labels_v2beta_exception_detail_proto_goTypes = []interface{}{
	(ExceptionType)(0),      // 0: google.apps.drive.labels.v2beta.ExceptionType
	(*ExceptionDetail)(nil), // 1: google.apps.drive.labels.v2beta.ExceptionDetail
}
var file_google_apps_drive_labels_v2beta_exception_detail_proto_depIdxs = []int32{
	0, // 0: google.apps.drive.labels.v2beta.ExceptionDetail.error_type:type_name -> google.apps.drive.labels.v2beta.ExceptionType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_google_apps_drive_labels_v2beta_exception_detail_proto_init() }
func file_google_apps_drive_labels_v2beta_exception_detail_proto_init() {
	if File_google_apps_drive_labels_v2beta_exception_detail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_apps_drive_labels_v2beta_exception_detail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_apps_drive_labels_v2beta_exception_detail_proto_goTypes,
		DependencyIndexes: file_google_apps_drive_labels_v2beta_exception_detail_proto_depIdxs,
		EnumInfos:         file_google_apps_drive_labels_v2beta_exception_detail_proto_enumTypes,
		MessageInfos:      file_google_apps_drive_labels_v2beta_exception_detail_proto_msgTypes,
	}.Build()
	File_google_apps_drive_labels_v2beta_exception_detail_proto = out.File
	file_google_apps_drive_labels_v2beta_exception_detail_proto_rawDesc = nil
	file_google_apps_drive_labels_v2beta_exception_detail_proto_goTypes = nil
	file_google_apps_drive_labels_v2beta_exception_detail_proto_depIdxs = nil
}
