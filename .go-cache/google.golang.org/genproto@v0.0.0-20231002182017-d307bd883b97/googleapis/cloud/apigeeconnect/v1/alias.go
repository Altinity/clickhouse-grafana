// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by aliasgen. DO NOT EDIT.

// Package apigeeconnect aliases all exported identifiers in package
// "cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb".
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb.
// Please read https://github.com/googleapis/google-cloud-go/blob/main/migration.md
// for more details.
package apigeeconnect

import (
	src "cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb"
	grpc "google.golang.org/grpc"
)

// Deprecated: Please use consts in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
const (
	Action_ACTION_UNSPECIFIED                  = src.Action_ACTION_UNSPECIFIED
	Action_OPEN_NEW_STREAM                     = src.Action_OPEN_NEW_STREAM
	Scheme_HTTPS                               = src.Scheme_HTTPS
	Scheme_SCHEME_UNSPECIFIED                  = src.Scheme_SCHEME_UNSPECIFIED
	TetherEndpoint_APIGEE_MART                 = src.TetherEndpoint_APIGEE_MART
	TetherEndpoint_APIGEE_MINT_RATING          = src.TetherEndpoint_APIGEE_MINT_RATING
	TetherEndpoint_APIGEE_RUNTIME              = src.TetherEndpoint_APIGEE_RUNTIME
	TetherEndpoint_TETHER_ENDPOINT_UNSPECIFIED = src.TetherEndpoint_TETHER_ENDPOINT_UNSPECIFIED
)

// Deprecated: Please use vars in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
var (
	Action_name                                         = src.Action_name
	Action_value                                        = src.Action_value
	File_google_cloud_apigeeconnect_v1_connection_proto = src.File_google_cloud_apigeeconnect_v1_connection_proto
	File_google_cloud_apigeeconnect_v1_tether_proto     = src.File_google_cloud_apigeeconnect_v1_tether_proto
	Scheme_name                                         = src.Scheme_name
	Scheme_value                                        = src.Scheme_value
	TetherEndpoint_name                                 = src.TetherEndpoint_name
	TetherEndpoint_value                                = src.TetherEndpoint_value
)

// The action taken by agent.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type Action = src.Action
type Cluster = src.Cluster
type Connection = src.Connection

// ConnectionServiceClient is the client API for ConnectionService service.
// For semantics around ctx use and closing/ending streaming RPCs, please refer
// to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type ConnectionServiceClient = src.ConnectionServiceClient

// ConnectionServiceServer is the server API for ConnectionService service.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type ConnectionServiceServer = src.ConnectionServiceServer

// gRPC request payload for tether.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type EgressRequest = src.EgressRequest

// gRPC response payload for tether.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type EgressResponse = src.EgressResponse

// The http headers.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type Header = src.Header

// The proto definition of http request.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type HttpRequest = src.HttpRequest

// The proto definition of http response.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type HttpResponse = src.HttpResponse

// The request for [ListConnections][Management.ListConnections].
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type ListConnectionsRequest = src.ListConnectionsRequest

// The response for [ListConnections][Management.ListConnections].
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type ListConnectionsResponse = src.ListConnectionsResponse

// Payload for EgressRequest.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type Payload = src.Payload
type Payload_Action = src.Payload_Action
type Payload_HttpRequest = src.Payload_HttpRequest
type Payload_StreamInfo = src.Payload_StreamInfo

// HTTP Scheme.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type Scheme = src.Scheme

// The Information of bi-directional stream.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type StreamInfo = src.StreamInfo

// TetherClient is the client API for Tether service. For semantics around ctx
// use and closing/ending streaming RPCs, please refer to
// https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type TetherClient = src.TetherClient

// Endpoint indicates where the messages will be delivered.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type TetherEndpoint = src.TetherEndpoint

// TetherServer is the server API for Tether service.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type TetherServer = src.TetherServer
type Tether_EgressClient = src.Tether_EgressClient
type Tether_EgressServer = src.Tether_EgressServer

// UnimplementedConnectionServiceServer can be embedded to have forward
// compatible implementations.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type UnimplementedConnectionServiceServer = src.UnimplementedConnectionServiceServer

// UnimplementedTetherServer can be embedded to have forward compatible
// implementations.
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type UnimplementedTetherServer = src.UnimplementedTetherServer

// The proto definition of url. A url represents a URL and the general form
// represented is: `[scheme://][google.cloud.apigeeconnect.v1.Url.host][path]`
//
// Deprecated: Please use types in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
type Url = src.Url

// Deprecated: Please use funcs in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
func NewConnectionServiceClient(cc grpc.ClientConnInterface) ConnectionServiceClient {
	return src.NewConnectionServiceClient(cc)
}

// Deprecated: Please use funcs in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
func NewTetherClient(cc grpc.ClientConnInterface) TetherClient { return src.NewTetherClient(cc) }

// Deprecated: Please use funcs in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
func RegisterConnectionServiceServer(s *grpc.Server, srv ConnectionServiceServer) {
	src.RegisterConnectionServiceServer(s, srv)
}

// Deprecated: Please use funcs in: cloud.google.com/go/apigeeconnect/apiv1/apigeeconnectpb
func RegisterTetherServer(s *grpc.Server, srv TetherServer) { src.RegisterTetherServer(s, srv) }
