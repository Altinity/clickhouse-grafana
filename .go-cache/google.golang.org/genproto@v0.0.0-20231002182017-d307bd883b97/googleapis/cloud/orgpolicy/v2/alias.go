// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by aliasgen. DO NOT EDIT.

// Package orgpolicy aliases all exported identifiers in package
// "cloud.google.com/go/orgpolicy/apiv2/orgpolicypb".
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb.
// Please read https://github.com/googleapis/google-cloud-go/blob/main/migration.md
// for more details.
package orgpolicy

import (
	src "cloud.google.com/go/orgpolicy/apiv2/orgpolicypb"
	grpc "google.golang.org/grpc"
)

// Deprecated: Please use consts in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
const (
	Constraint_ALLOW                          = src.Constraint_ALLOW
	Constraint_CONSTRAINT_DEFAULT_UNSPECIFIED = src.Constraint_CONSTRAINT_DEFAULT_UNSPECIFIED
	Constraint_DENY                           = src.Constraint_DENY
)

// Deprecated: Please use vars in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
var (
	Constraint_ConstraintDefault_name               = src.Constraint_ConstraintDefault_name
	Constraint_ConstraintDefault_value              = src.Constraint_ConstraintDefault_value
	File_google_cloud_orgpolicy_v2_constraint_proto = src.File_google_cloud_orgpolicy_v2_constraint_proto
	File_google_cloud_orgpolicy_v2_orgpolicy_proto  = src.File_google_cloud_orgpolicy_v2_orgpolicy_proto
)

// Similar to PolicySpec but with an extra 'launch' field for launch
// reference. The PolicySpec here is specific for dry-run/darklaunch.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type AlternatePolicySpec = src.AlternatePolicySpec

// A `constraint` describes a way to restrict resource's configuration. For
// example, you could enforce a constraint that controls which cloud services
// can be activated across an organization, or whether a Compute Engine
// instance can have serial port connections established. `Constraints` can be
// configured by the organization's policy administrator to fit the needs of
// the organization by setting a `policy` that includes `constraints` at
// different locations in the organization's resource hierarchy. Policies are
// inherited down the resource hierarchy from higher levels, but can also be
// overridden. For details about the inheritance rules please read about
// [`policies`][google.cloud.OrgPolicy.v2.Policy]. `Constraints` have a default
// behavior determined by the `constraint_default` field, which is the
// enforcement behavior that is used in the absence of a `policy` being defined
// or inherited for the resource in question.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type Constraint = src.Constraint

// A `Constraint` that is either enforced or not. For example a constraint
// `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM
// instance, serial port connections will not be opened to that instance.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type Constraint_BooleanConstraint = src.Constraint_BooleanConstraint
type Constraint_BooleanConstraint_ = src.Constraint_BooleanConstraint_

// Specifies the default behavior in the absence of any `Policy` for the
// `Constraint`. This must not be `CONSTRAINT_DEFAULT_UNSPECIFIED`. Immutable
// after creation.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type Constraint_ConstraintDefault = src.Constraint_ConstraintDefault

// A `Constraint` that allows or disallows a list of string values, which are
// configured by an Organization's policy administrator with a `Policy`.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type Constraint_ListConstraint = src.Constraint_ListConstraint
type Constraint_ListConstraint_ = src.Constraint_ListConstraint_

// The request sent to the [CreatePolicyRequest]
// [google.cloud.orgpolicy.v2.OrgPolicy.CreatePolicy] method.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type CreatePolicyRequest = src.CreatePolicyRequest

// The request sent to the [DeletePolicy]
// [google.cloud.orgpolicy.v2.OrgPolicy.DeletePolicy] method.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type DeletePolicyRequest = src.DeletePolicyRequest

// The request sent to the [GetEffectivePolicy]
// [google.cloud.orgpolicy.v2.OrgPolicy.GetEffectivePolicy] method.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type GetEffectivePolicyRequest = src.GetEffectivePolicyRequest

// The request sent to the [GetPolicy]
// [google.cloud.orgpolicy.v2.OrgPolicy.GetPolicy] method.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type GetPolicyRequest = src.GetPolicyRequest

// The request sent to the [ListConstraints]
// [google.cloud.orgpolicy.v2.OrgPolicy.ListConstraints] method.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type ListConstraintsRequest = src.ListConstraintsRequest

// The response returned from the [ListConstraints]
// [google.cloud.orgpolicy.v2.OrgPolicy.ListConstraints] method.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type ListConstraintsResponse = src.ListConstraintsResponse

// The request sent to the [ListPolicies]
// [google.cloud.orgpolicy.v2.OrgPolicy.ListPolicies] method.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type ListPoliciesRequest = src.ListPoliciesRequest

// The response returned from the [ListPolicies]
// [google.cloud.orgpolicy.v2.OrgPolicy.ListPolicies] method. It will be empty
// if no `Policies` are set on the resource.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type ListPoliciesResponse = src.ListPoliciesResponse

// OrgPolicyClient is the client API for OrgPolicy service. For semantics
// around ctx use and closing/ending streaming RPCs, please refer to
// https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type OrgPolicyClient = src.OrgPolicyClient

// OrgPolicyServer is the server API for OrgPolicy service.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type OrgPolicyServer = src.OrgPolicyServer

// Defines a Cloud Organization `Policy` which is used to specify
// `Constraints` for configurations of Cloud Platform resources.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type Policy = src.Policy

// Defines a Cloud Organization `PolicySpec` which is used to specify
// `Constraints` for configurations of Cloud Platform resources.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type PolicySpec = src.PolicySpec

// A rule used to express this policy.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type PolicySpec_PolicyRule = src.PolicySpec_PolicyRule
type PolicySpec_PolicyRule_AllowAll = src.PolicySpec_PolicyRule_AllowAll
type PolicySpec_PolicyRule_DenyAll = src.PolicySpec_PolicyRule_DenyAll
type PolicySpec_PolicyRule_Enforce = src.PolicySpec_PolicyRule_Enforce

// A message that holds specific allowed and denied values. This message can
// define specific values and subtrees of Cloud Resource Manager resource
// hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or
// denied. This is achieved by using the `under:` and optional `is:` prefixes.
// The `under:` prefix is used to denote resource subtree values. The `is:`
// prefix is used to denote specific values, and is required only if the value
// contains a ":". Values prefixed with "is:" are treated the same as values
// with no prefix. Ancestry subtrees must be in one of the following formats: -
// "projects/<project-id>", e.g. "projects/tokyo-rain-123" -
// "folders/<folder-id>", e.g. "folders/1234" -
// "organizations/<organization-id>", e.g. "organizations/1234" The
// `supports_under` field of the associated `Constraint` defines whether
// ancestry prefixes can be used.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type PolicySpec_PolicyRule_StringValues = src.PolicySpec_PolicyRule_StringValues
type PolicySpec_PolicyRule_Values = src.PolicySpec_PolicyRule_Values

// UnimplementedOrgPolicyServer can be embedded to have forward compatible
// implementations.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type UnimplementedOrgPolicyServer = src.UnimplementedOrgPolicyServer

// The request sent to the [UpdatePolicyRequest]
// [google.cloud.orgpolicy.v2.OrgPolicy.UpdatePolicy] method.
//
// Deprecated: Please use types in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
type UpdatePolicyRequest = src.UpdatePolicyRequest

// Deprecated: Please use funcs in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
func NewOrgPolicyClient(cc grpc.ClientConnInterface) OrgPolicyClient {
	return src.NewOrgPolicyClient(cc)
}

// Deprecated: Please use funcs in: cloud.google.com/go/orgpolicy/apiv2/orgpolicypb
func RegisterOrgPolicyServer(s *grpc.Server, srv OrgPolicyServer) {
	src.RegisterOrgPolicyServer(s, srv)
}
