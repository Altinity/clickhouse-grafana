// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by aliasgen. DO NOT EDIT.

// Package resourcemanager aliases all exported identifiers in package
// "cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb".
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb.
// Please read https://github.com/googleapis/google-cloud-go/blob/main/migration.md
// for more details.
package resourcemanager

import (
	src "cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb"
	grpc "google.golang.org/grpc"
)

// Deprecated: Please use consts in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
const (
	FolderOperation_CREATE                     = src.FolderOperation_CREATE
	FolderOperation_MOVE                       = src.FolderOperation_MOVE
	FolderOperation_OPERATION_TYPE_UNSPECIFIED = src.FolderOperation_OPERATION_TYPE_UNSPECIFIED
	Folder_ACTIVE                              = src.Folder_ACTIVE
	Folder_DELETE_REQUESTED                    = src.Folder_DELETE_REQUESTED
	Folder_LIFECYCLE_STATE_UNSPECIFIED         = src.Folder_LIFECYCLE_STATE_UNSPECIFIED
)

// Deprecated: Please use vars in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
var (
	File_google_cloud_resourcemanager_v2_folders_proto = src.File_google_cloud_resourcemanager_v2_folders_proto
	FolderOperation_OperationType_name                 = src.FolderOperation_OperationType_name
	FolderOperation_OperationType_value                = src.FolderOperation_OperationType_value
	Folder_LifecycleState_name                         = src.Folder_LifecycleState_name
	Folder_LifecycleState_value                        = src.Folder_LifecycleState_value
)

// The CreateFolder request message.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type CreateFolderRequest = src.CreateFolderRequest

// The DeleteFolder request message.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type DeleteFolderRequest = src.DeleteFolderRequest

// A Folder in an Organization's resource hierarchy, used to organize that
// Organization's resources.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type Folder = src.Folder

// Metadata describing a long running folder operation
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type FolderOperation = src.FolderOperation

// The type of operation that failed.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type FolderOperation_OperationType = src.FolderOperation_OperationType

// Folder lifecycle states.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type Folder_LifecycleState = src.Folder_LifecycleState

// FoldersClient is the client API for Folders service. For semantics around
// ctx use and closing/ending streaming RPCs, please refer to
// https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type FoldersClient = src.FoldersClient

// FoldersServer is the server API for Folders service.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type FoldersServer = src.FoldersServer

// The GetFolder request message.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type GetFolderRequest = src.GetFolderRequest

// The ListFolders request message.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type ListFoldersRequest = src.ListFoldersRequest

// The ListFolders response message.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type ListFoldersResponse = src.ListFoldersResponse

// The MoveFolder request message.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type MoveFolderRequest = src.MoveFolderRequest

// The request message for searching folders.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type SearchFoldersRequest = src.SearchFoldersRequest

// The response message for searching folders.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type SearchFoldersResponse = src.SearchFoldersResponse

// The UndeleteFolder request message.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type UndeleteFolderRequest = src.UndeleteFolderRequest

// UnimplementedFoldersServer can be embedded to have forward compatible
// implementations.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type UnimplementedFoldersServer = src.UnimplementedFoldersServer

// The request message for updating a folder's display name.
//
// Deprecated: Please use types in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
type UpdateFolderRequest = src.UpdateFolderRequest

// Deprecated: Please use funcs in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
func NewFoldersClient(cc grpc.ClientConnInterface) FoldersClient { return src.NewFoldersClient(cc) }

// Deprecated: Please use funcs in: cloud.google.com/go/resourcemanager/apiv2/resourcemanagerpb
func RegisterFoldersServer(s *grpc.Server, srv FoldersServer) { src.RegisterFoldersServer(s, srv) }
