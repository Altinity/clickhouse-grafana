version: "3"

services:
  clickhouse-ontime:
    image: ${CLICKHOUSE_IMAGE:-clickhouse/clickhouse-server}:${CLICKHOUSE_VERSION:-latest}
    environment:
      - CLICKHOUSE_ALWAYS_RUN_INITDB_SCRIPTS=true
    volumes:
      - ./docker/clickhouse/load_ontime.sh:/docker-entrypoint-initdb.d/load_ontime.sh
      - /var/lib/clickhouse/
      - /var/log/clickhouse-server/
  clickhouse:
    image: ${CLICKHOUSE_IMAGE:-clickhouse/clickhouse-server}:${CLICKHOUSE_VERSION:-latest}
    environment:
      - CLICKHOUSE_ALWAYS_RUN_INITDB_SCRIPTS=true
    ports:
      - "8123:8123"
      - "9000:9000"
      - "5432:5432"
      - "3306:3306"
    volumes:
      - /var/log/clickhouse-server
      - ./docker/clickhouse/init_schema.sql:/docker-entrypoint-initdb.d/init_schema.sql
      - ./docker/clickhouse/postgres_dictionary.xml:/etc/clickhouse-server/postgres_dictionary.xml
      - ./docker/clickhouse/listen_ports.xml:/etc/clickhouse-server/config.d/listen_ports.xml
      - ./docker/clickhouse/ca-key.pem:/etc/clickhouse-server/ca-key.pem
      - ./docker/clickhouse/ca-cert.pem:/etc/clickhouse-server/ca-cert.pem
      - ./docker/clickhouse/server-cert.pem:/etc/clickhouse-server/server-cert.pem
      - ./docker/clickhouse/server-key.pem:/etc/clickhouse-server/server-key.pem
      - ./docker/clickhouse/client-cert.pem:/etc/clickhouse-server/client-cert.pem
      - ./docker/clickhouse/client-key.pem:/etc/clickhouse-server/client-key.pem
      - ./docker/clickhouse/dhparam.pem:/etc/clickhouse-server/dhparam.pem
      - ./docker/clickhouse/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./docker/clickhouse/options_method.xml:/etc/clickhouse-server/config.d/options_method.xml
      - ./docker/clickhouse/profiling_config.xml:/etc/clickhouse-server/config.d/profiling_config.xml
      - ./docker/clickhouse/profiling_users.xml:/etc/clickhouse-server/users.d/profiling_users.xml

  mysql:
    image: docker.io/mysql:${MYSQL_VERSION:-latest}
    environment:
      - MYSQL_ROOT_PASSWORD=grafana

  postgres:
    image: docker.io/postgres:${POSTGRES_VERSION:-latest}
    environment:
      - POSTGRES_PASSWORD=grafana
    volumes:
      - ./docker/postgres/init_schema.sql:/docker-entrypoint-initdb.d/init_schema.sql

  grafana:
    image: ${GRAFANA_IMAGE:-grafana/grafana}:${GRAFANA_VERSION:-latest}
    build:
      context: ./.config
      args:
        grafana_image: ${GRAFANA_IMAGE:-grafana}
        grafana_version: ${GRAFANA_VERSION:-latest}
    volumes:
      - ./dist/:/var/lib/grafana/plugins/vertamedia-clickhouse-datasource/
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
      - ./docker/grafana/dashboards/:/var/lib/grafana/dashboards/
      - ./docker/grafana/alerting/:/etc/grafana/provisioning/alerting/

    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel,grafana-clickhouse-datasource
      GF_LOG_LEVEL: debug
      GF_DATABASE_WAL: "true"
      GF_UNIFIED_ALERTING_ENABLED: ${GF_UNIFIED_ALERTING_ENABLED:-true}
      GF_ALERTING_ENABLED: ${GF_ALERTING_ENABLED:-false}
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: vertamedia-clickhouse-datasource
    ports:
      - 3000:3000/tcp
    depends_on:
      - clickhouse

  grafana_external_install:
    image: ${GRAFANA_IMAGE:-grafana/grafana}:${GRAFANA_VERSION:-latest}
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
      - ./docker/grafana/dashboards/:/var/lib/grafana/dashboards/

    environment:
      GF_INSTALL_PLUGINS: "grafana-piechart-panel,grafana-worldmap-panel,grafana-clickhouse-datasource,https://github.com/Altinity/clickhouse-grafana/releases/download/v${CLICKHOUSE_PLUGIN_VERSION:-3.1.0}/vertamedia-clickhouse-datasource-${CLICKHOUSE_PLUGIN_VERSION:-3.1.0}.zip;vertamedia-clickhouse-datasource"
      GF_LOG_LEVEL: debug
      GF_DATABASE_WAL: "true"
      GF_UNIFIED_ALERTING_ENABLED: ${GF_UNIFIED_ALERTING_ENABLED:-false}
      GF_ALERTING_ENABLED: ${GF_ALERTING_ENABLED:-true}
    ports:
      - "3001:3000"
    depends_on:
      - clickhouse

  trickster:
    image: tricksterio/trickster:${TRICKSTER_VERSION:-latest}
    volumes:
      - ./docker/trickster/trickster.conf:/etc/trickster/trickster.conf
    ports:
      - "8480:8480"
    depends_on:
      - clickhouse

  frontend_builder:
    image: node:lts
    working_dir: /grafana-clickhouse
    volumes:
      - ./:/grafana-clickhouse
      # for speedup npm install under WSL
      # - "node_modules:/grafana-clickhouse/node_modules"
    command: |
      bash -xec '
        if [[ "3" == `ls -la ./node_modules/ | wc -l` ]]; then npm install; fi && \
        npm run build && \
        npm run test:ci
      '

  backend_builder:
    image: golang:1.22
    working_dir: /go/src/grafana-clickhouse
    environment:
      GOCACHE: "/go-cache"
      RUN_TESTS: "${RUN_TESTS:-.+}"
      CGO_ENABLED: "0"
    volumes:
      - ./:/go/src/grafana-clickhouse
      - ./.go-cache:/go/pkg/mod
      - ./.go-cache:/go-cache
    command: |
      bash -xec "
        git config --global --add safe.directory /go/src/grafana-clickhouse &&
        (command -v mage || go install -v github.com/magefile/mage@latest) &&
        go test -timeout 1m -failfast -tags=integration -run "${RUN_TESTS:-.+}" -v ./pkg/ &&
        mage -v && 
        chmod +x ./dist/altinity-clickhouse-plugin*
      "

  plugin_signer:
    image: node:lts
    working_dir: /grafana-clickhouse
    volumes:
      - ./:/grafana-clickhouse
      # for speedup npm install
      - "node_modules:/grafana-clickhouse/node_modules"
    command: |
      npm run sign

volumes:
  node_modules:
